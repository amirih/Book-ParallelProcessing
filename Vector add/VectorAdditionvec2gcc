	.file	"VectorAddition.c"
	.text
	.p2align 4,,15
	.globl	assignToThisCore12
	.type	assignToThisCore12, @function
assignToThisCore12:
.LFB5460:
	.cfi_startproc
	movl	%edi, %r8d
	movl	$mask, %edx
	movl	$16, %ecx
	xorl	%eax, %eax
	movq	%rdx, %rdi
	rep stosq
	movslq	%r8d, %rax
	cmpq	$1023, %rax
	ja	.L2
	shrq	$6, %rax
	movl	$1, %edx
	shlx	%r8, %rdx, %r8
	orq	%r8, mask(,%rax,8)
.L2:
	movslq	%esi, %rax
	cmpq	$1023, %rax
	ja	.L3
	shrq	$6, %rax
	movl	$1, %edx
	shlx	%rsi, %rdx, %rsi
	orq	%rsi, mask(,%rax,8)
.L3:
	movl	$mask, %edx
	movl	$128, %esi
	xorl	%edi, %edi
	jmp	sched_setaffinity
	.cfi_endproc
.LFE5460:
	.size	assignToThisCore12, .-assignToThisCore12
	.p2align 4,,15
	.globl	assignMatrixf32
	.type	assignMatrixf32, @function
assignMatrixf32:
.LFB5461:
	.cfi_startproc
	xorl	%r8d, %r8d
	vmovsd	.LC0(%rip), %xmm1
	movl	$274877907, %r10d
.L6:
	xorl	%r9d, %r9d
	movl	$1, %esi
	.p2align 4,,10
	.p2align 3
.L7:
	movl	%r8d, %eax
	cltd
	idivl	%esi
	leal	(%rax,%r9), %ecx
	movl	%ecx, %eax
	mull	%r10d
	shrl	$6, %edx
	imull	$1000, %edx, %edx
	subl	%edx, %ecx
	vcvtsi2sd	%ecx, %xmm0, %xmm0
	vaddsd	%xmm1, %xmm0, %xmm0
	vcvtsd2ss	%xmm0, %xmm2, %xmm2
	vmovss	%xmm2, -4(%rdi,%rsi,4)
	incq	%rsi
	addl	%r8d, %r9d
	cmpq	$129, %rsi
	jne	.L7
	incl	%r8d
	addq	$512, %rdi
	cmpl	$128, %r8d
	jne	.L6
	ret
	.cfi_endproc
.LFE5461:
	.size	assignMatrixf32, .-assignMatrixf32
	.p2align 4,,15
	.globl	assignMatrixi32
	.type	assignMatrixi32, @function
assignMatrixi32:
.LFB5462:
	.cfi_startproc
	xorl	%eax, %eax
	vmovdqa	.LC1(%rip), %ymm15
	vmovdqa	.LC2(%rip), %ymm0
	vmovdqa	.LC3(%rip), %ymm3
	vmovdqa	.LC4(%rip), %ymm2
	vmovdqa	.LC5(%rip), %ymm14
	vmovdqa	.LC6(%rip), %ymm13
	vmovdqa	.LC7(%rip), %ymm12
	vmovdqa	.LC8(%rip), %ymm11
	vmovdqa	.LC9(%rip), %ymm10
	vmovdqa	.LC10(%rip), %ymm9
	vmovdqa	.LC11(%rip), %ymm8
	vmovdqa	.LC12(%rip), %ymm7
.L12:
	vmovd	%eax, %xmm1
	vpbroadcastd	%xmm1, %ymm1
	vpmulld	%ymm15, %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, (%rdi)
	vpmulld	%ymm14, %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 32(%rdi)
	vpmulld	%ymm13, %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 64(%rdi)
	vpmulld	%ymm12, %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 96(%rdi)
	vpmulld	%ymm11, %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 128(%rdi)
	vpmulld	%ymm10, %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 160(%rdi)
	vpmulld	%ymm9, %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 192(%rdi)
	vpmulld	%ymm8, %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 224(%rdi)
	vpmulld	%ymm7, %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 256(%rdi)
	vpmulld	.LC13(%rip), %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 288(%rdi)
	vpmulld	.LC14(%rip), %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 320(%rdi)
	vpmulld	.LC15(%rip), %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 352(%rdi)
	vpmulld	.LC16(%rip), %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 384(%rdi)
	vpmulld	.LC17(%rip), %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 416(%rdi)
	vpmulld	.LC18(%rip), %ymm1, %ymm5
	vpsrlq	$32, %ymm5, %ymm6
	vpmuldq	%ymm0, %ymm5, %ymm4
	vpmuldq	%ymm0, %ymm6, %ymm6
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm6, %ymm6
	vpor	%ymm6, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm6
	vpslld	$5, %ymm6, %ymm4
	vpsubd	%ymm6, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm6, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm5, %ymm4
	vmovdqu	%ymm4, 448(%rdi)
	vpmulld	.LC19(%rip), %ymm1, %ymm1
	vpsrlq	$32, %ymm1, %ymm5
	vpmuldq	%ymm0, %ymm1, %ymm4
	vpmuldq	%ymm0, %ymm5, %ymm5
	vpshufb	%ymm3, %ymm4, %ymm4
	vpshufb	%ymm2, %ymm5, %ymm5
	vpor	%ymm5, %ymm4, %ymm4
	vpsrad	$6, %ymm4, %ymm5
	vpslld	$5, %ymm5, %ymm4
	vpsubd	%ymm5, %ymm4, %ymm4
	vpslld	$2, %ymm4, %ymm4
	vpaddd	%ymm5, %ymm4, %ymm4
	vpslld	$3, %ymm4, %ymm4
	vpsubd	%ymm4, %ymm1, %ymm1
	vmovdqu	%ymm1, 480(%rdi)
	incl	%eax
	addq	$512, %rdi
	cmpl	$128, %eax
	jne	.L12
	vzeroupper
	ret
	.cfi_endproc
.LFE5462:
	.size	assignMatrixi32, .-assignMatrixi32
	.p2align 4,,15
	.globl	assignMatrixi16
	.type	assignMatrixi16, @function
assignMatrixi16:
.LFB5463:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	leaq	256(%rdi), %rbx
	xorl	%ebp, %ebp
	movl	$1717986919, %r12d
.L15:
	leaq	-256(%rbx), %r13
	xorl	%r14d, %r14d
	.p2align 4,,10
	.p2align 3
.L16:
	call	rand
	movl	%eax, %ecx
	movzbl	%r14b, %esi
	imull	%r12d
	sarl	$2, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	leal	(%rdx,%rdx,4), %eax
	addl	%eax, %eax
	subl	%eax, %ecx
	addl	%esi, %ecx
	movw	%cx, 0(%r13)
	addl	%ebp, %r14d
	addq	$2, %r13
	cmpq	%r13, %rbx
	jne	.L16
	incl	%ebp
	addq	$256, %rbx
	cmpl	$128, %ebp
	jne	.L15
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE5463:
	.size	assignMatrixi16, .-assignMatrixi16
	.p2align 4,,15
	.globl	assignMatrixui16
	.type	assignMatrixui16, @function
assignMatrixui16:
.LFB5464:
	.cfi_startproc
	xorl	%eax, %eax
	vmovdqa	.LC20(%rip), %ymm14
	vmovdqa	.LC21(%rip), %ymm2
	vmovdqa	.LC22(%rip), %ymm13
	vmovdqa	.LC23(%rip), %ymm1
	vmovdqa	.LC24(%rip), %ymm12
	vmovdqa	.LC25(%rip), %ymm11
	vmovdqa	.LC26(%rip), %ymm10
	vmovdqa	.LC27(%rip), %ymm9
	vmovdqa	.LC28(%rip), %ymm8
	vmovdqa	.LC29(%rip), %ymm7
	vmovdqa	.LC30(%rip), %ymm6
	vmovdqa	.LC31(%rip), %ymm5
	vmovdqa	.LC32(%rip), %ymm4
.L22:
	vmovd	%eax, %xmm0
	vpbroadcastd	%xmm0, %ymm0
	vpaddd	%ymm14, %ymm0, %ymm3
	vpand	%ymm2, %ymm3, %ymm3
	vpaddd	%ymm13, %ymm0, %ymm15
	vpand	%ymm2, %ymm15, %ymm15
	vpand	%ymm3, %ymm1, %ymm3
	vpand	%ymm15, %ymm1, %ymm15
	vpackusdw	%ymm15, %ymm3, %ymm3
	vpermq	$216, %ymm3, %ymm3
	vmovdqu	%ymm3, (%rdi)
	vpaddd	%ymm12, %ymm0, %ymm3
	vpand	%ymm2, %ymm3, %ymm3
	vpaddd	%ymm11, %ymm0, %ymm15
	vpand	%ymm2, %ymm15, %ymm15
	vpand	%ymm3, %ymm1, %ymm3
	vpand	%ymm15, %ymm1, %ymm15
	vpackusdw	%ymm15, %ymm3, %ymm3
	vpermq	$216, %ymm3, %ymm3
	vmovdqu	%ymm3, 32(%rdi)
	vpaddd	%ymm10, %ymm0, %ymm3
	vpand	%ymm2, %ymm3, %ymm3
	vpaddd	%ymm9, %ymm0, %ymm15
	vpand	%ymm2, %ymm15, %ymm15
	vpand	%ymm3, %ymm1, %ymm3
	vpand	%ymm15, %ymm1, %ymm15
	vpackusdw	%ymm15, %ymm3, %ymm3
	vpermq	$216, %ymm3, %ymm3
	vmovdqu	%ymm3, 64(%rdi)
	vpaddd	%ymm8, %ymm0, %ymm3
	vpand	%ymm2, %ymm3, %ymm3
	vpaddd	%ymm7, %ymm0, %ymm15
	vpand	%ymm2, %ymm15, %ymm15
	vpand	%ymm3, %ymm1, %ymm3
	vpand	%ymm15, %ymm1, %ymm15
	vpackusdw	%ymm15, %ymm3, %ymm3
	vpermq	$216, %ymm3, %ymm3
	vmovdqu	%ymm3, 96(%rdi)
	vpaddd	%ymm6, %ymm0, %ymm3
	vpand	%ymm2, %ymm3, %ymm3
	vpaddd	%ymm5, %ymm0, %ymm15
	vpand	%ymm2, %ymm15, %ymm15
	vpand	%ymm3, %ymm1, %ymm3
	vpand	%ymm15, %ymm1, %ymm15
	vpackusdw	%ymm15, %ymm3, %ymm3
	vpermq	$216, %ymm3, %ymm3
	vmovdqu	%ymm3, 128(%rdi)
	vpaddd	%ymm4, %ymm0, %ymm3
	vpand	%ymm2, %ymm3, %ymm3
	vpaddd	.LC33(%rip), %ymm0, %ymm15
	vpand	%ymm2, %ymm15, %ymm15
	vpand	%ymm3, %ymm1, %ymm3
	vpand	%ymm15, %ymm1, %ymm15
	vpackusdw	%ymm15, %ymm3, %ymm3
	vpermq	$216, %ymm3, %ymm3
	vmovdqu	%ymm3, 160(%rdi)
	vpaddd	.LC34(%rip), %ymm0, %ymm3
	vpand	%ymm2, %ymm3, %ymm3
	vpaddd	.LC35(%rip), %ymm0, %ymm15
	vpand	%ymm2, %ymm15, %ymm15
	vpand	%ymm3, %ymm1, %ymm3
	vpand	%ymm15, %ymm1, %ymm15
	vpackusdw	%ymm15, %ymm3, %ymm3
	vpermq	$216, %ymm3, %ymm3
	vmovdqu	%ymm3, 192(%rdi)
	vpaddd	.LC36(%rip), %ymm0, %ymm3
	vpand	%ymm2, %ymm3, %ymm3
	vpaddd	.LC37(%rip), %ymm0, %ymm0
	vpand	%ymm2, %ymm0, %ymm0
	vpand	%ymm3, %ymm1, %ymm3
	vpand	%ymm0, %ymm1, %ymm0
	vpackusdw	%ymm0, %ymm3, %ymm0
	vpermq	$216, %ymm0, %ymm0
	vmovdqu	%ymm0, 224(%rdi)
	incl	%eax
	addq	$256, %rdi
	cmpl	$128, %eax
	jne	.L22
	vzeroupper
	ret
	.cfi_endproc
.LFE5464:
	.size	assignMatrixui16, .-assignMatrixui16
	.p2align 4,,15
	.globl	assignMatrixi8
	.type	assignMatrixi8, @function
assignMatrixi8:
.LFB5465:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	leaq	128(%rdi), %rbp
	xorl	%ebx, %ebx
.L25:
	leaq	-128(%rbp), %r12
	xorl	%r13d, %r13d
	.p2align 4,,10
	.p2align 3
.L26:
	call	rand
	movzbl	%r13b, %edx
	movl	%eax, %ecx
	shrl	$31, %ecx
	addl	%ecx, %eax
	andl	$1, %eax
	subl	%ecx, %eax
	addl	%edx, %eax
	cltd
	shrl	$24, %edx
	addl	%edx, %eax
	movzbl	%al, %eax
	subl	%edx, %eax
	movb	%al, (%r12)
	addl	%ebx, %r13d
	incq	%r12
	cmpq	%rbp, %r12
	jne	.L26
	incl	%ebx
	leaq	128(%r12), %rbp
	cmpl	$128, %ebx
	jne	.L25
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE5465:
	.size	assignMatrixi8, .-assignMatrixi8
	.p2align 4,,15
	.globl	assignArrayi32
	.type	assignArrayi32, @function
assignArrayi32:
.LFB5466:
	.cfi_startproc
	leaq	65536(%rdi), %rax
	vmovdqa	.LC38(%rip), %ymm4
	vmovdqa	.LC1(%rip), %ymm3
	vmovdqa	.LC39(%rip), %ymm6
	vmovdqa	.LC2(%rip), %ymm5
	vmovdqa	.LC3(%rip), %ymm8
	vmovdqa	.LC4(%rip), %ymm7
	.p2align 4,,10
	.p2align 3
.L32:
	vpmulld	%ymm3, %ymm4, %ymm2
	vpsrlq	$32, %ymm2, %ymm1
	vpmuldq	%ymm5, %ymm2, %ymm0
	vpmuldq	%ymm5, %ymm1, %ymm1
	vpshufb	%ymm8, %ymm0, %ymm0
	vpshufb	%ymm7, %ymm1, %ymm1
	vpor	%ymm1, %ymm0, %ymm0
	vpsrad	$6, %ymm0, %ymm1
	vpslld	$5, %ymm1, %ymm0
	vpsubd	%ymm1, %ymm0, %ymm0
	vpslld	$2, %ymm0, %ymm0
	vpaddd	%ymm1, %ymm0, %ymm0
	vpslld	$3, %ymm0, %ymm0
	vpsubd	%ymm0, %ymm2, %ymm0
	vmovdqu	%ymm0, (%rdi)
	addq	$32, %rdi
	vpaddd	%ymm6, %ymm3, %ymm3
	vpaddd	%ymm6, %ymm4, %ymm4
	cmpq	%rdi, %rax
	jne	.L32
	vzeroupper
	ret
	.cfi_endproc
.LFE5466:
	.size	assignArrayi32, .-assignArrayi32
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC72:
	.string	"\nthe best is %lld in %lldth iteration and %lld repetitions\n"
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC73:
	.string	"a"
.LC74:
	.string	"fileForSpeedups"
.LC75:
	.string	"%s, %dx%d, %lld\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
.LFB5479:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	andq	$-32, %rsp
	vmovdqa	.LC40(%rip), %ymm0
	vmovdqu	%ymm0, a(%rip)
	vmovdqa	.LC41(%rip), %ymm0
	vmovdqu	%ymm0, b(%rip)
	vmovdqa	.LC42(%rip), %ymm0
	vmovdqu	%ymm0, a+32(%rip)
	vmovdqa	.LC43(%rip), %ymm0
	vmovdqu	%ymm0, b+32(%rip)
	vmovdqa	.LC44(%rip), %ymm0
	vmovdqu	%ymm0, a+64(%rip)
	vmovdqa	.LC45(%rip), %ymm0
	vmovdqu	%ymm0, b+64(%rip)
	vmovdqa	.LC46(%rip), %ymm0
	vmovdqu	%ymm0, a+96(%rip)
	vmovdqa	.LC47(%rip), %ymm0
	vmovdqu	%ymm0, b+96(%rip)
	vmovdqa	.LC48(%rip), %ymm0
	vmovdqu	%ymm0, a+128(%rip)
	vmovdqa	.LC49(%rip), %ymm0
	vmovdqu	%ymm0, b+128(%rip)
	vmovdqa	.LC50(%rip), %ymm0
	vmovdqu	%ymm0, a+160(%rip)
	vmovdqa	.LC51(%rip), %ymm0
	vmovdqu	%ymm0, b+160(%rip)
	vmovdqa	.LC52(%rip), %ymm0
	vmovdqu	%ymm0, a+192(%rip)
	vmovdqa	.LC53(%rip), %ymm0
	vmovdqu	%ymm0, b+192(%rip)
	vmovdqa	.LC54(%rip), %ymm0
	vmovdqu	%ymm0, a+224(%rip)
	vmovdqa	.LC55(%rip), %ymm0
	vmovdqu	%ymm0, b+224(%rip)
	vmovdqa	.LC56(%rip), %ymm0
	vmovdqu	%ymm0, a+256(%rip)
	vmovdqa	.LC57(%rip), %ymm0
	vmovdqu	%ymm0, b+256(%rip)
	vmovdqa	.LC58(%rip), %ymm0
	vmovdqu	%ymm0, a+288(%rip)
	vmovdqa	.LC59(%rip), %ymm0
	vmovdqu	%ymm0, b+288(%rip)
	vmovdqa	.LC60(%rip), %ymm0
	vmovdqu	%ymm0, a+320(%rip)
	vmovdqa	.LC61(%rip), %ymm0
	vmovdqu	%ymm0, b+320(%rip)
	vmovdqa	.LC62(%rip), %ymm0
	vmovdqu	%ymm0, a+352(%rip)
	vmovdqa	.LC63(%rip), %ymm0
	vmovdqu	%ymm0, b+352(%rip)
	vmovdqa	.LC64(%rip), %ymm0
	vmovdqu	%ymm0, a+384(%rip)
	vmovdqa	.LC65(%rip), %ymm0
	vmovdqu	%ymm0, b+384(%rip)
	vmovdqa	.LC66(%rip), %ymm0
	vmovdqu	%ymm0, a+416(%rip)
	vmovdqa	.LC67(%rip), %ymm0
	vmovdqu	%ymm0, b+416(%rip)
	vmovdqa	.LC68(%rip), %ymm0
	vmovdqu	%ymm0, a+448(%rip)
	vmovdqa	.LC69(%rip), %ymm0
	vmovdqu	%ymm0, b+448(%rip)
	vmovdqa	.LC70(%rip), %ymm0
	vmovdqu	%ymm0, a+480(%rip)
	vmovdqa	.LC71(%rip), %ymm0
	vmovdqu	%ymm0, b+480(%rip)
	movq	$9999999, elapsed_rdtsc(%rip)
	movabsq	$19999999999, %rax
	movq	%rax, overal_time(%rip)
	movq	$0, ttime(%rip)
	movl	$9999999, %edi
	jmp	.L38
.L42:
	cmpq	overal_time(%rip), %rax
	jge	.L37
.L38:
#APP
# 14 "VectorAddition.c" 1
	#mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm1
# 0 "" 2
#NO_APP
	rdtsc
	salq	$32, %rdx
	orq	%rdx, %rax
	movq	%rax, t1_rdtsc(%rip)
	vmovdqu	a(%rip), %ymm1
	vpaddd	b(%rip), %ymm1, %ymm0
	vmovdqu	%ymm0, c(%rip)
	vmovdqu	a+32(%rip), %ymm2
	vpaddd	b+32(%rip), %ymm2, %ymm0
	vmovdqu	%ymm0, c+32(%rip)
	vmovdqu	a+64(%rip), %ymm3
	vpaddd	b+64(%rip), %ymm3, %ymm0
	vmovdqu	%ymm0, c+64(%rip)
	vmovdqu	a+96(%rip), %ymm4
	vpaddd	b+96(%rip), %ymm4, %ymm0
	vmovdqu	%ymm0, c+96(%rip)
	vmovdqu	a+128(%rip), %ymm5
	vpaddd	b+128(%rip), %ymm5, %ymm0
	vmovdqu	%ymm0, c+128(%rip)
	vmovdqu	a+160(%rip), %ymm6
	vpaddd	b+160(%rip), %ymm6, %ymm0
	vmovdqu	%ymm0, c+160(%rip)
	vmovdqu	a+192(%rip), %ymm7
	vpaddd	b+192(%rip), %ymm7, %ymm0
	vmovdqu	%ymm0, c+192(%rip)
	vmovdqu	a+224(%rip), %ymm1
	vpaddd	b+224(%rip), %ymm1, %ymm0
	vmovdqu	%ymm0, c+224(%rip)
	vmovdqu	a+256(%rip), %ymm2
	vpaddd	b+256(%rip), %ymm2, %ymm0
	vmovdqu	%ymm0, c+256(%rip)
	vmovdqu	a+288(%rip), %ymm3
	vpaddd	b+288(%rip), %ymm3, %ymm0
	vmovdqu	%ymm0, c+288(%rip)
	vmovdqu	a+320(%rip), %ymm4
	vpaddd	b+320(%rip), %ymm4, %ymm0
	vmovdqu	%ymm0, c+320(%rip)
	vmovdqu	a+352(%rip), %ymm5
	vpaddd	b+352(%rip), %ymm5, %ymm0
	vmovdqu	%ymm0, c+352(%rip)
	vmovdqu	a+384(%rip), %ymm6
	vpaddd	b+384(%rip), %ymm6, %ymm0
	vmovdqu	%ymm0, c+384(%rip)
	vmovdqu	a+416(%rip), %ymm7
	vpaddd	b+416(%rip), %ymm7, %ymm0
	vmovdqu	%ymm0, c+416(%rip)
	vmovdqu	a+448(%rip), %ymm1
	vpaddd	b+448(%rip), %ymm1, %ymm0
	vmovdqu	%ymm0, c+448(%rip)
	vmovdqu	a+480(%rip), %ymm2
	vpaddd	b+480(%rip), %ymm2, %ymm0
	vmovdqu	%ymm0, c+480(%rip)
	rdtsc
	salq	$32, %rdx
	orq	%rdx, %rax
	movq	%rax, t2_rdtsc(%rip)
#APP
# 20 "VectorAddition.c" 1
	#mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm2
# 0 "" 2
#NO_APP
	movq	t2_rdtsc(%rip), %rax
	subq	t1_rdtsc(%rip), %rax
	movq	%rax, ttotal_rdtsc(%rip)
	movq	ttbest_rdtsc(%rip), %rsi
	movq	elapsed_rdtsc(%rip), %rdx
	cmpq	%rsi, %rax
	jge	.L36
	movq	%rax, ttbest_rdtsc(%rip)
	movq	elapsed_rdtsc(%rip), %rdx
	movq	%rdi, %rcx
	subq	%rdx, %rcx
	movq	%rcx, elapsed(%rip)
	movq	%rax, %rsi
.L36:
	addq	ttime(%rip), %rax
	movq	%rax, ttime(%rip)
	leaq	-1(%rdx), %rcx
	movq	%rcx, elapsed_rdtsc(%rip)
	testq	%rdx, %rdx
	jne	.L42
	orq	$-1, %rcx
.L37:
	movl	$9999999, %eax
	subq	%rcx, %rax
	movq	%rax, %rcx
	movq	elapsed(%rip), %rdx
	movl	$.LC72, %edi
	xorl	%eax, %eax
	vzeroupper
	call	printf
	movl	$.LC73, %esi
	movl	$.LC74, %edi
	call	fopen
	movq	%rax, fileForSpeedups(%rip)
	movq	ttbest_rdtsc(%rip), %r9
	movl	$128, %r8d
	movl	$128, %ecx
	movq	programName(%rip), %rdx
	movl	$.LC75, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	call	fprintf
	xorl	%eax, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5479:
	.size	main, .-main
	.comm	c,512,32
	.comm	b,512,32
	.comm	a,512,32
	.comm	temp2i16,32,32
	.comm	mask,128,32
	.globl	ttime
	.bss
	.align 8
	.type	ttime, @object
	.size	ttime, 8
ttime:
	.zero	8
	.globl	overal_time
	.data
	.align 8
	.type	overal_time, @object
	.size	overal_time, 8
overal_time:
	.quad	19999999999
	.globl	elapsed_rdtsc
	.align 8
	.type	elapsed_rdtsc, @object
	.size	elapsed_rdtsc, 8
elapsed_rdtsc:
	.quad	9999999
	.comm	elapsed,8,8
	.globl	ttbest_rdtsc
	.align 8
	.type	ttbest_rdtsc, @object
	.size	ttbest_rdtsc, 8
ttbest_rdtsc:
	.quad	99999999999999999
	.comm	ttotal_rdtsc,8,8
	.comm	t2_rdtsc,8,8
	.comm	t1_rdtsc,8,8
	.comm	mask1,128,32
	.globl	programName
	.section	.rodata.str1.1
.LC76:
	.string	" "
	.data
	.align 8
	.type	programName, @object
	.size	programName, 8
programName:
	.quad	.LC76
	.globl	fileForSpeedups
	.bss
	.align 8
	.type	fileForSpeedups, @object
	.size	fileForSpeedups, 8
fileForSpeedups:
	.zero	8
	.section	.rodata.cst8,"aM",@progbits,8
	.align 8
.LC0:
	.long	2439541424
	.long	1069513965
	.section	.rodata.cst32,"aM",@progbits,32
	.align 32
.LC1:
	.long	0
	.long	1
	.long	2
	.long	3
	.long	4
	.long	5
	.long	6
	.long	7
	.align 32
.LC2:
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.long	274877907
	.align 32
.LC3:
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.align 32
.LC4:
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	-128
	.byte	12
	.byte	13
	.byte	14
	.byte	15
	.align 32
.LC5:
	.long	8
	.long	9
	.long	10
	.long	11
	.long	12
	.long	13
	.long	14
	.long	15
	.align 32
.LC6:
	.long	16
	.long	17
	.long	18
	.long	19
	.long	20
	.long	21
	.long	22
	.long	23
	.align 32
.LC7:
	.long	24
	.long	25
	.long	26
	.long	27
	.long	28
	.long	29
	.long	30
	.long	31
	.align 32
.LC8:
	.long	32
	.long	33
	.long	34
	.long	35
	.long	36
	.long	37
	.long	38
	.long	39
	.align 32
.LC9:
	.long	40
	.long	41
	.long	42
	.long	43
	.long	44
	.long	45
	.long	46
	.long	47
	.align 32
.LC10:
	.long	48
	.long	49
	.long	50
	.long	51
	.long	52
	.long	53
	.long	54
	.long	55
	.align 32
.LC11:
	.long	56
	.long	57
	.long	58
	.long	59
	.long	60
	.long	61
	.long	62
	.long	63
	.align 32
.LC12:
	.long	64
	.long	65
	.long	66
	.long	67
	.long	68
	.long	69
	.long	70
	.long	71
	.align 32
.LC13:
	.long	72
	.long	73
	.long	74
	.long	75
	.long	76
	.long	77
	.long	78
	.long	79
	.align 32
.LC14:
	.long	80
	.long	81
	.long	82
	.long	83
	.long	84
	.long	85
	.long	86
	.long	87
	.align 32
.LC15:
	.long	88
	.long	89
	.long	90
	.long	91
	.long	92
	.long	93
	.long	94
	.long	95
	.align 32
.LC16:
	.long	96
	.long	97
	.long	98
	.long	99
	.long	100
	.long	101
	.long	102
	.long	103
	.align 32
.LC17:
	.long	104
	.long	105
	.long	106
	.long	107
	.long	108
	.long	109
	.long	110
	.long	111
	.align 32
.LC18:
	.long	112
	.long	113
	.long	114
	.long	115
	.long	116
	.long	117
	.long	118
	.long	119
	.align 32
.LC19:
	.long	120
	.long	121
	.long	122
	.long	123
	.long	124
	.long	125
	.long	126
	.long	127
	.align 32
.LC20:
	.long	10
	.long	11
	.long	12
	.long	13
	.long	14
	.long	15
	.long	16
	.long	17
	.align 32
.LC21:
	.long	255
	.long	255
	.long	255
	.long	255
	.long	255
	.long	255
	.long	255
	.long	255
	.align 32
.LC22:
	.long	18
	.long	19
	.long	20
	.long	21
	.long	22
	.long	23
	.long	24
	.long	25
	.align 32
.LC23:
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.long	65535
	.align 32
.LC24:
	.long	26
	.long	27
	.long	28
	.long	29
	.long	30
	.long	31
	.long	32
	.long	33
	.align 32
.LC25:
	.long	34
	.long	35
	.long	36
	.long	37
	.long	38
	.long	39
	.long	40
	.long	41
	.align 32
.LC26:
	.long	42
	.long	43
	.long	44
	.long	45
	.long	46
	.long	47
	.long	48
	.long	49
	.align 32
.LC27:
	.long	50
	.long	51
	.long	52
	.long	53
	.long	54
	.long	55
	.long	56
	.long	57
	.align 32
.LC28:
	.long	58
	.long	59
	.long	60
	.long	61
	.long	62
	.long	63
	.long	64
	.long	65
	.align 32
.LC29:
	.long	66
	.long	67
	.long	68
	.long	69
	.long	70
	.long	71
	.long	72
	.long	73
	.align 32
.LC30:
	.long	74
	.long	75
	.long	76
	.long	77
	.long	78
	.long	79
	.long	80
	.long	81
	.align 32
.LC31:
	.long	82
	.long	83
	.long	84
	.long	85
	.long	86
	.long	87
	.long	88
	.long	89
	.align 32
.LC32:
	.long	90
	.long	91
	.long	92
	.long	93
	.long	94
	.long	95
	.long	96
	.long	97
	.align 32
.LC33:
	.long	98
	.long	99
	.long	100
	.long	101
	.long	102
	.long	103
	.long	104
	.long	105
	.align 32
.LC34:
	.long	106
	.long	107
	.long	108
	.long	109
	.long	110
	.long	111
	.long	112
	.long	113
	.align 32
.LC35:
	.long	114
	.long	115
	.long	116
	.long	117
	.long	118
	.long	119
	.long	120
	.long	121
	.align 32
.LC36:
	.long	122
	.long	123
	.long	124
	.long	125
	.long	126
	.long	127
	.long	128
	.long	129
	.align 32
.LC37:
	.long	130
	.long	131
	.long	132
	.long	133
	.long	134
	.long	135
	.long	136
	.long	137
	.align 32
.LC38:
	.long	1234
	.long	1235
	.long	1236
	.long	1237
	.long	1238
	.long	1239
	.long	1240
	.long	1241
	.align 32
.LC39:
	.long	8
	.long	8
	.long	8
	.long	8
	.long	8
	.long	8
	.long	8
	.long	8
	.align 32
.LC40:
	.long	0
	.long	1
	.long	4
	.long	9
	.long	16
	.long	25
	.long	36
	.long	49
	.align 32
.LC41:
	.long	0
	.long	2
	.long	4
	.long	6
	.long	8
	.long	10
	.long	12
	.long	14
	.align 32
.LC42:
	.long	64
	.long	81
	.long	100
	.long	121
	.long	144
	.long	169
	.long	196
	.long	225
	.align 32
.LC43:
	.long	16
	.long	18
	.long	20
	.long	22
	.long	24
	.long	26
	.long	28
	.long	30
	.align 32
.LC44:
	.long	256
	.long	289
	.long	324
	.long	361
	.long	400
	.long	441
	.long	484
	.long	529
	.align 32
.LC45:
	.long	32
	.long	34
	.long	36
	.long	38
	.long	40
	.long	42
	.long	44
	.long	46
	.align 32
.LC46:
	.long	576
	.long	625
	.long	676
	.long	729
	.long	784
	.long	841
	.long	900
	.long	961
	.align 32
.LC47:
	.long	48
	.long	50
	.long	52
	.long	54
	.long	56
	.long	58
	.long	60
	.long	62
	.align 32
.LC48:
	.long	1024
	.long	1089
	.long	1156
	.long	1225
	.long	1296
	.long	1369
	.long	1444
	.long	1521
	.align 32
.LC49:
	.long	64
	.long	66
	.long	68
	.long	70
	.long	72
	.long	74
	.long	76
	.long	78
	.align 32
.LC50:
	.long	1600
	.long	1681
	.long	1764
	.long	1849
	.long	1936
	.long	2025
	.long	2116
	.long	2209
	.align 32
.LC51:
	.long	80
	.long	82
	.long	84
	.long	86
	.long	88
	.long	90
	.long	92
	.long	94
	.align 32
.LC52:
	.long	2304
	.long	2401
	.long	2500
	.long	2601
	.long	2704
	.long	2809
	.long	2916
	.long	3025
	.align 32
.LC53:
	.long	96
	.long	98
	.long	100
	.long	102
	.long	104
	.long	106
	.long	108
	.long	110
	.align 32
.LC54:
	.long	3136
	.long	3249
	.long	3364
	.long	3481
	.long	3600
	.long	3721
	.long	3844
	.long	3969
	.align 32
.LC55:
	.long	112
	.long	114
	.long	116
	.long	118
	.long	120
	.long	122
	.long	124
	.long	126
	.align 32
.LC56:
	.long	4096
	.long	4225
	.long	4356
	.long	4489
	.long	4624
	.long	4761
	.long	4900
	.long	5041
	.align 32
.LC57:
	.long	128
	.long	130
	.long	132
	.long	134
	.long	136
	.long	138
	.long	140
	.long	142
	.align 32
.LC58:
	.long	5184
	.long	5329
	.long	5476
	.long	5625
	.long	5776
	.long	5929
	.long	6084
	.long	6241
	.align 32
.LC59:
	.long	144
	.long	146
	.long	148
	.long	150
	.long	152
	.long	154
	.long	156
	.long	158
	.align 32
.LC60:
	.long	6400
	.long	6561
	.long	6724
	.long	6889
	.long	7056
	.long	7225
	.long	7396
	.long	7569
	.align 32
.LC61:
	.long	160
	.long	162
	.long	164
	.long	166
	.long	168
	.long	170
	.long	172
	.long	174
	.align 32
.LC62:
	.long	7744
	.long	7921
	.long	8100
	.long	8281
	.long	8464
	.long	8649
	.long	8836
	.long	9025
	.align 32
.LC63:
	.long	176
	.long	178
	.long	180
	.long	182
	.long	184
	.long	186
	.long	188
	.long	190
	.align 32
.LC64:
	.long	9216
	.long	9409
	.long	9604
	.long	9801
	.long	10000
	.long	10201
	.long	10404
	.long	10609
	.align 32
.LC65:
	.long	192
	.long	194
	.long	196
	.long	198
	.long	200
	.long	202
	.long	204
	.long	206
	.align 32
.LC66:
	.long	10816
	.long	11025
	.long	11236
	.long	11449
	.long	11664
	.long	11881
	.long	12100
	.long	12321
	.align 32
.LC67:
	.long	208
	.long	210
	.long	212
	.long	214
	.long	216
	.long	218
	.long	220
	.long	222
	.align 32
.LC68:
	.long	12544
	.long	12769
	.long	12996
	.long	13225
	.long	13456
	.long	13689
	.long	13924
	.long	14161
	.align 32
.LC69:
	.long	224
	.long	226
	.long	228
	.long	230
	.long	232
	.long	234
	.long	236
	.long	238
	.align 32
.LC70:
	.long	14400
	.long	14641
	.long	14884
	.long	15129
	.long	15376
	.long	15625
	.long	15876
	.long	16129
	.align 32
.LC71:
	.long	240
	.long	242
	.long	244
	.long	246
	.long	248
	.long	250
	.long	252
	.long	254
	.ident	"GCC: (GNU) 8.1.1 20180502 (Red Hat 8.1.1-1)"
	.section	.note.GNU-stack,"",@progbits
